@prefix : <http://purl.org/ceu/lco#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix swrl: <http://www.w3.org/2003/11/swrl#> .
@prefix swrlb: <http://www.w3.org/2003/11/swrlb#> .
@base <http://purl.org/ceu/simeon> .

<http://purl.org/ceu/simeon> rdf:type owl:Ontology ;
                             
                             rdfs:label "SIMEON Ontology"@en ,
                                        "Ontología SIMEON"@es ;
                             
                             dc:license "Attribution-ShareAlike 4.0 International Creative Commons license (http://creativecommons.org/licenses/by-sa/4.0/)"@en ;
                             
                             rdfs:comment "SIMEON ontology allow to establish similarity measures between ontology objets and collections."@en ;
                             
                             dc:abstract "SIMEON ontology allow to establish similarity measures between ontology objets and collections."@en ;
                             
                             owl:versionInfo "Version 1.0 2015/07/01"@en ;
                             
                             dc:creator "Alfredo Sánchez Alberca (asalber@ceu.es) <http://aprendeconalf.es/foaf.rdf>"@es ;
                             
                             rdfs:comment "La ontología SIMEON permite establecer medidas de similitud entre los objetos y colecciones de objetos de las ontologías."@es ;
                             
                             dc:abstract "La ontología SIMEON permite establecer medidas de similitud entre los objetos y colecciones de objetos de las ontologías."@es ;
                             
                             dc:license "Licencia de Creative Commons Reconocimiento-CompartirIgual 4.0 Internacional (http://creativecommons.org/licenses/by-sa/4.0/)."@es ;
                             
                             owl:versionInfo "Versión 1.0 01/07/2015"@es ;
                             
                             owl:versionIRI <http://purl.org/ceu/simeon/1.0> .


#################################################################
#
#    Object Properties
#
#################################################################


###  http://purl.org/ceu/simeon#comparesObject

:comparesObject rdf:type owl:ObjectProperty ;
                
                rdfs:label "compares object"@en ,
                           "compara objeto"@es ;
                
                rdfs:comment "Property that relates a comparison method with an individual that is compared with that method."@en ,
                             "Propiedad que relaciona un método de comparación con un individuo que es comparado mediante ese método."@es ;
                
                rdfs:domain :ComparisonMethod ;
                
                rdfs:range owl:Thing ;
                
                owl:propertyChainAxiom ( :usedByComparisonMeasure
                                         :hasSourceObject
                                       ) ,
                                       ( :usedByComparisonMeasure
                                         :hasTargetObject
                                       ) .



###  http://purl.org/ceu/simeon#hasAlgorithm

:hasAlgorithm rdf:type owl:ObjectProperty ;
              
              rdfs:label "has algorithm"@en ,
                         "tiene algoritmo"@es ;
              
              rdfs:comment "Property that relates a comparison method with the algorithm or calculation procedure that uses."@en ,
                           "Propiedad que relaciona un método de comparación con el algoritmo o procedimiento de cálculo que utiliza."@es ;
              
              rdfs:range :Algorithm ;
              
              rdfs:domain :ComparisonMethod .



###  http://purl.org/ceu/simeon#hasDomain

:hasDomain rdf:type owl:ObjectProperty ;
           
           rdfs:label "has domain"@en ,
                      "tiene dominio"@es ;
           
           rdfs:comment "Property that relates a comparison method with the types of objects or entities that compares."@en ,
                        "Propiedad que relaciona un método de comparación con el tipo de objetos o entidades que compara."@es ;
           
           rdfs:domain :ComparisonMethod .



###  http://purl.org/ceu/simeon#hasReference

:hasReference rdf:type owl:ObjectProperty ;
              
              rdfs:label "has reference"@en ,
                         "tiene referencia"@es ;
              
              rdfs:comment "Property that relates a comparison method with a bibliographic reference where the method is explained."@en ,
                           "Propiedad que relaciona un método de comparación con una referencia bibliográfica donde se describe el método."@es ;
              
              rdfs:domain :ComparisonMethod ;
              
              rdfs:range <http://purl.org/dc/terms/BibliographicResource> .



###  http://purl.org/ceu/simeon#hasSourceObject

:hasSourceObject rdf:type owl:FunctionalProperty ,
                          owl:ObjectProperty ;
                 
                 rdfs:label "has source object"@en ,
                            "tiene objeto origen"@es ;
                 
                 rdfs:comment "A similarity measurement expresses the similarity degree of a source object with a target object. This property that relates a similarity measure with the source object."@en ,
                              "Una medida de similitud establece el grado de parecido de un objeto origen con otro destino. Esta propiedad relaciona la medida de similitud con el objeto origen."@es ;
                 
                 rdfs:domain :ObjectComparisonMeasure ;
                 
                 rdfs:range owl:Thing .



###  http://purl.org/ceu/simeon#hasTargetObject

:hasTargetObject rdf:type owl:FunctionalProperty ,
                          owl:ObjectProperty ;
                 
                 rdfs:label "has target object"@en ,
                            "tiene objeto destino"@es ;
                 
                 rdfs:comment "A similarity measurement expresses the similarity degree of a source object with a target object. This property that relates a similarity measure with the target object."@en ,
                              "Una medida de similitud establece el grado de parecido de un objeto origen con otro destino. Esta propiedad relaciona la medida de similitud con el objeto destino cuando se trata de un literal."@es ,
                              "Una medida de similitud establece el grado de parecido de un objeto origen con otro destino. Esta propiedad relaciona la medida de similitud con el objeto destino."@es ;
                 
                 rdfs:domain :ObjectComparisonMeasure ;
                 
                 rdfs:range owl:Thing .



###  http://purl.org/ceu/simeon#isPerformedBy

:isPerformedBy rdf:type owl:FunctionalProperty ,
                        owl:ObjectProperty ;
               
               rdfs:label "is performed by"@en ,
                          "es realizada por"@es ;
               
               rdfs:comment "Property that relates a subjective comparison measure with the person that performs that measure."@en ,
                            "Propiedad que relaciona una medida de comparación subjetiva con la persona que realiza esa medida."@es ;
               
               rdfs:domain :ComparisonMeasure ;
               
               rdfs:range <http://purl.org/dc/terms/Agent> .



###  http://purl.org/ceu/simeon#usedByComparisonMeasure

:usedByComparisonMeasure rdf:type owl:InverseFunctionalProperty ,
                                  owl:ObjectProperty ;
                         
                         rdfs:label "used by comparsion measure"@en ,
                                    "usada por medida de comapración"@es ;
                         
                         rdfs:comment "Property that relates a comparison method with a comparison measure calculated with that method."@en ,
                                      "Propieda que relaciona un método de comparación con una medida de comparación calculada con ese método."@es ;
                         
                         rdfs:range :ComparisonMeasure ;
                         
                         rdfs:domain :ComparisonMethod .



###  http://purl.org/ceu/simeon#usesComparisonMethod

:usesComparisonMethod rdf:type owl:FunctionalProperty ,
                               owl:ObjectProperty ;
                      
                      rdfs:label "uses comparison method"@en ,
                                 "usa método de comparación"@es ;
                      
                      rdfs:comment "Property that relates a comparison measure with the comparison method used to get it."@en ,
                                   "Propiedad que relaciona una medida de comparación con el método de comparación utilizado para obtenerla."@es ;
                      
                      rdfs:domain :ComparisonMeasure ;
                      
                      rdfs:range :ComparisonMethod ;
                      
                      owl:inverseOf :usedByComparisonMeasure .





#################################################################
#
#    Data properties
#
#################################################################


###  http://purl.org/ceu/simeon#hasSourceData

:hasSourceData rdf:type owl:DatatypeProperty ,
                        owl:FunctionalProperty ;
               
               rdfs:label "has source data"@en ,
                          "tiene dato origen"@es ;
               
               rdfs:comment "A similarity measurement expresses the similarity degree of a source object with a target object. This property that relates a similarity measure with the source object when that object is a literal."@en ,
                            "Una medida de similitud establece el grado de parecido de un objeto origen con otro destino. Esta propiedad relaciona la medida de similitud con el objeto origen cuando se trata de un literal."@es ;
               
               rdfs:domain :DataComparisonMeasure ;
               
               rdfs:range rdfs:Literal .



###  http://purl.org/ceu/simeon#hasTargetData

:hasTargetData rdf:type owl:DatatypeProperty ,
                        owl:FunctionalProperty ;
               
               rdfs:label "has target data"@en ,
                          "tiene dato destino"@es ;
               
               rdfs:comment "A similarity measurement expresses the similarity degree of a source object with a target object. This property that relates a similarity measure with the target object when that object is a literal."@en ,
                            "Una medida de similitud establece el grado de parecido de un objeto origen con otro destino. Esta propiedad relaciona la medida de similitud con el objeto destino cuando se trata de un literal."@es ;
               
               rdfs:domain :DataComparisonMeasure ;
               
               rdfs:range rdfs:Literal .



###  http://purl.org/ceu/simeon#hasValue

:hasValue rdf:type owl:DatatypeProperty ,
                   owl:FunctionalProperty ;
          
          rdfs:label "has value"@en ,
                     "tiene valor"@es ;
          
          rdfs:comment "Property that relates a similiarity measure with the value of the measure."@en ,
                       "Propiedad que relaciona una medida de similitud con el valor de la medida."@es ;
          
          rdfs:domain :ComparisonMeasure ;
          
          rdfs:range [ rdf:type rdfs:Datatype ;
                       owl:onDatatype xsd:decimal ;
                       owl:withRestrictions ( [ xsd:minInclusive 0.0
                                              ]
                                            )
                     ] .





#################################################################
#
#    Classes
#
#################################################################


###  http://purl.obolibrary.org/obo/IAO_0000064

<http://purl.obolibrary.org/obo/IAO_0000064> rdf:type owl:Class ;
                                             
                                             rdfs:label "Algorithm"@en ,
                                                        "Algoritmo"@es ;
                                             
                                             owl:equivalentClass :Algorithm ;
                                             
                                             rdfs:comment "An algorithm is a procedure for doing some calculations."@en ;
                                             
                                             rdfs:seeAlso "The software ontology: http://theswo.sourceforge.net/"@en ,
                                                          "La ontología de software: http://theswo.sourceforge.net/"@es ;
                                             
                                             rdfs:comment "Un algoritmo es un procedimiento para realizar unos cálculos."@es .



###  http://purl.org/ceu/simeon#Algorithm

:Algorithm rdf:type owl:Class ;
           
           rdfs:label "Algorithm"@en ,
                      "Algoritmo"@es ;
           
           rdfs:comment "An algorithm is a procedure for doing some calculations."@en ;
           
           rdfs:seeAlso "The software ontology: http://theswo.sourceforge.net/"@en ,
                        "La ontología del software: http://theswo.sourceforge.net/"@es ;
           
           rdfs:comment "Un algoritmo es un procedimiento para realizar unos cálculos."@es .



###  http://purl.org/ceu/simeon#ComparisonMeasure

:ComparisonMeasure rdf:type owl:Class ;
                   
                   rdfs:label "Comparison measure"@en ,
                              "Medida de comparación"@es ;
                   
                   rdfs:subClassOf [ rdf:type owl:Restriction ;
                                     owl:onProperty :hasValue ;
                                     owl:someValuesFrom [ rdf:type rdfs:Datatype ;
                                                          owl:onDatatype xsd:decimal ;
                                                          owl:withRestrictions ( [ xsd:minInclusive 0
                                                                                 ]
                                                                               )
                                                        ]
                                   ] ;
                   
                   rdfs:comment "A comparison measure is a value that espresses the similarity or dissimilarity degree between two objects or data (literals)."@en ,
                                "Una medida de comparación es un valor que expresa el grado de similitud o disimilitud entre dos objetos o datos (literales)."@es ;
                   
                   owl:disjointUnionOf ( :DataComparisonMeasure
                                         :ObjectComparisonMeasure
                                       ) .



###  http://purl.org/ceu/simeon#ComparisonMethod

:ComparisonMethod rdf:type owl:Class ;
                  
                  rdfs:label "Comparison method"@en ,
                             "Método de comparación"@es ;
                  
                  rdfs:comment "A comparison method is a procedure to compare a source object or literal data with a target one that returns a real number, known as comparison measure, that expresses the similarity or dissimilarity degree of the source object or literal data with the target one."@en ,
                               "Un método de comparación es un procedimiento para comparar un objeto o dato literal origen con otro destino que devuelve un número real, conocido como medida de comparación, que expresa el grado de similitud o disimilitud del objeto o dato origen con el destino."@es ;
                  
                  owl:disjointUnionOf ( :DataComparisonMethod
                                        :ObjectComparisonMethod
                                      ) .



###  http://purl.org/ceu/simeon#DataComparisonMeasure

:DataComparisonMeasure rdf:type owl:Class ;
                       
                       rdfs:label "Data comparison measure"@en ,
                                  "Medida de comparación de datos"@es ;
                       
                       rdfs:subClassOf :ComparisonMeasure ,
                                       [ rdf:type owl:Restriction ;
                                         owl:onProperty :hasSourceData ;
                                         owl:someValuesFrom rdfs:Literal
                                       ] ,
                                       [ rdf:type owl:Restriction ;
                                         owl:onProperty :hasTargetData ;
                                         owl:someValuesFrom rdfs:Literal
                                       ] ,
                                       [ rdf:type owl:Restriction ;
                                         owl:onProperty :usesComparisonMethod ;
                                         owl:someValuesFrom :DataComparisonMethod
                                       ] ;
                       
                       owl:disjointWith :ObjectComparisonMeasure ;
                       
                       rdfs:comment "A comparison measure is a value that espresses the similarity or dissimilarity degree between two simple data (literals): booleans, numbers, dates, strings, etc."@en ,
                                    "Una medida de comparación es un valor que expresa el grado de similitud o disimilitud entre dos datos simples (literales): booleanos, números, fechas, cadenas, etc."@es .



###  http://purl.org/ceu/simeon#DataComparisonMethod

:DataComparisonMethod rdf:type owl:Class ;
                      
                      rdfs:label "Data comparison method"@en ,
                                 "Método de comparación de datos"@es ;
                      
                      rdfs:subClassOf :ComparisonMethod ;
                      
                      owl:disjointWith :ObjectComparisonMethod ;
                      
                      rdfs:comment "A comparison method is a procedure to compare a source literal data with a target literal data that returns a real number, known as comparison measure, that expresses the similarity or dissimilarity degree of the source literal data with the target one."@en ,
                                   "Un método de comparación es un procedimiento para comparar un dato literal origen con otro destino que devuelve un número real, conocido como medida de comparación, que expresa el grado de similitud o disimilitud del dato literal origen con el destino."@es .



###  http://purl.org/ceu/simeon#DissimilarityFunction

:DissimilarityFunction rdf:type owl:Class ;
                       
                       rdfs:label "Dissimilarity function"@en ,
                                  "Función de disimilitud"@es ;
                       
                       rdfs:subClassOf :ComparisonMethod ;
                       
                       rdfs:comment """A dissimilarity function is a real function that associates to every pair of objects in a domain, a real number that expresses the unlikeness, dissimilarity or distance between the two objects according to some of their features, and satisfies the following axioms:
1- Non-negativity: d(x,y) ≥ 0 for all x, y. 
2- Minimality: d(x,x) = 0 for all x."""@en ,
                                    """Una función de disimilitud es una función real que asocia a cada par de elementos de un mismo dominio, un número real que expresa el grado de desemejanza, disimilitud o distancia entre los dos objetos de acuerdo a alguna de sus características, y satisface los siguientes axiomas:
1- No negatividad: d(x, y) ≥ 0 para todo x, y. 
2- Minimalidad: d(x, x) = 0  para todo x."""@es .



###  http://purl.org/ceu/simeon#DissimilarityMeasure

:DissimilarityMeasure rdf:type owl:Class ;
                      
                      rdfs:label "Dissimilarity measure"@en ,
                                 "Medida de disimilitud"@es ;
                      
                      rdfs:subClassOf :ObjectiveComparisonMeasure ,
                                      [ rdf:type owl:Restriction ;
                                        owl:onProperty :usesComparisonMethod ;
                                        owl:someValuesFrom :DissimilarityFunction
                                      ] ;
                      
                      owl:disjointWith :SimilarityMeasure ;
                      
                      rdfs:comment """A dissimilarity measure is a number that expresses the dissimilarity or discrepance degree between two objects, calculated with a dissimilarity function, that is, a real function d that satisfies the following axioms:
1- Non-negativity: d(x,y) ≥ 0 for all x, y. 
2- Minimality: d(x,x) = 0 for all x."""@en ,
                                   """Una medida de disimilitud es un número que establece el grado de disimilitud o discrepancia entre dos objetos, calculado con una función de disimilitud, es decir, una función real d que satisface los siguientes axiomas:
1- No negatividad: d(x, y) ≥ 0 para todo x, y. 
2- Minimalidad: d(x, x) = 0  para todo x."""@es .



###  http://purl.org/ceu/simeon#DistanceFunction

:DistanceFunction rdf:type owl:Class ;
                  
                  rdfs:label "Distance function"@en ,
                             "Función de distancia"@es ;
                  
                  rdfs:subClassOf :SymmetricDissimilarityFunction ;
                  
                  rdfs:comment """A distance function is a dissimilarity function d that satisfies the following axioms:
1- Non negativity: d(x,y) ≥ 0 for all x,y.
2- Coincidence: d(x,y) = 0 if and only if x=y. 
3- Symmetry: d(x,y) = d(y,x) for all x,y.
4- Triangle inequality: d(x,z) ≤ d(x,y) + d(y,z) for all x,y,z."""@en ,
                               """Una función de distancia es una función de disimilitud d que satisface los siguientes axiomas:
1- No negatividad: d(x,y) ≥ 0 para todo x,y.
2- Coincidencia: d(x,y) = 0 si y sólo si x=y.
3- Simetría: d(x,y) = d(y,x) para todo x,y.
4- Desigualdad triangular: d(x,z) ≤ d(x,y) + d(y,z) para todo x,y,z."""@es .



###  http://purl.org/ceu/simeon#DistanceMeasure

:DistanceMeasure rdf:type owl:Class ;
                 
                 rdfs:label "Distance measure"@en ,
                            "Medida de distancia"@es ;
                 
                 rdfs:subClassOf :SymmetricDissimilarityMeasure ,
                                 [ rdf:type owl:Restriction ;
                                   owl:onProperty :usesComparisonMethod ;
                                   owl:someValuesFrom :DistanceFunction
                                 ] ;
                 
                 rdfs:comment """A distance measure is a value that expresses the degree of dissimilarity between two objects calculated with a distance funcion, that is, a real function d that satisfies the following axioms:
1- Non negativity: d(x,y) ≥ 0 for all x,y.
2- Coincidence: d(x,y) = 0 if and only if x=y. 
3- Symmetry: d(x,y) = d(y,x) for all x,y.
4- Triangle inequality: d(x,z) ≤ d(x,y) + d(y,z) for all x,y,z."""@en ,
                              """Una medida de distancia es un número que expresa el grado de disimilitud entre dos objetos calculado con una función de distancia d, es decir, una función real d que satisface los siguientes axiomas:
1- No negatividad: d(x,y) ≥ 0 para todo x,y.
2- Coincidencia: d(x,y) = 0 si y sólo si x=y.
3- Simetría: d(x,y) = d(y,x) para todo x,y.
4- Desigualdad triangular: d(x,z) ≤ d(x,y) + d(y,z) para todo x,y,z."""@es .



###  http://purl.org/ceu/simeon#NormalizedComparisonMeasure

:NormalizedComparisonMeasure rdf:type owl:Class ;
                             
                             rdfs:label "Normalized similarity measure"@en ,
                                        "Medida de comparación normalizada"@es ;
                             
                             owl:equivalentClass [ rdf:type owl:Class ;
                                                   owl:intersectionOf ( :ComparisonMeasure
                                                                        [ rdf:type owl:Restriction ;
                                                                          owl:onProperty :hasValue ;
                                                                          owl:allValuesFrom [ rdf:type rdfs:Datatype ;
                                                                                              owl:onDatatype xsd:decimal ;
                                                                                              owl:withRestrictions ( [ xsd:maxInclusive 1
                                                                                                                     ]
                                                                                                                     [ xsd:minInclusive 0
                                                                                                                     ]
                                                                                                                   )
                                                                                            ]
                                                                        ]
                                                                      )
                                                 ] ;
                             
                             rdfs:subClassOf [ rdf:type owl:Restriction ;
                                               owl:onProperty :usesComparisonMethod ;
                                               owl:someValuesFrom :NormalizedComparisonMethod
                                             ] ;
                             
                             rdfs:comment "A normalized comparison measure is a comparison measure in te real interval [0,1]."@en ,
                                          "Una medida de comparación normalizada es una medida en el intervalo real [0,1]."@es .



###  http://purl.org/ceu/simeon#NormalizedComparisonMethod

:NormalizedComparisonMethod rdf:type owl:Class ;
                            
                            rdfs:label "Normalized comparison method"@en ,
                                       "Método de comparación normalizado"@es ;
                            
                            rdfs:subClassOf :ComparisonMethod ;
                            
                            rdfs:comment "A normalized comparison method is a comparison method that returns a number in the real interval [0,1]."@en ,
                                         "Un método de comparación normalizado es un método de comparación que devuelve un número real en el intervalo [0,1]."@es .



###  http://purl.org/ceu/simeon#NormalizedDissimilarityFunction

:NormalizedDissimilarityFunction rdf:type owl:Class ;
                                 
                                 rdfs:label "Normalized dissimilarity function"@en ,
                                            "Función de disimilitud normalizada"@es ;
                                 
                                 owl:equivalentClass [ rdf:type owl:Class ;
                                                       owl:intersectionOf ( :DissimilarityFunction
                                                                            :NormalizedComparisonMethod
                                                                          )
                                                     ] ;
                                 
                                 rdfs:comment "A normalized dissimilarity function is a dissimilarity function with range the real inteval [0,1], that is, that returns values between 0 and 1."@en ,
                                              "Una función de disimilitud normalizada es una función de disimilitud con rango el intervalo real [0,1], es decir, que devuelve valores entre 0 y 1."@es .



###  http://purl.org/ceu/simeon#NormalizedDissimilarityMeasure

:NormalizedDissimilarityMeasure rdf:type owl:Class ;
                                
                                rdfs:label "Normalized dissimilarity measure"@en ,
                                           "Medida de disimilitud normalizada"@es ;
                                
                                owl:equivalentClass [ rdf:type owl:Class ;
                                                      owl:intersectionOf ( :DissimilarityMeasure
                                                                           :NormalizedComparisonMeasure
                                                                         )
                                                    ] ;
                                
                                rdfs:comment "A normalized dissimilarity measure is a dissimilarity measure in the real interval [0,1]."@en ,
                                             "Una medida de disimilitud normalizada es una medida de disimilitud en el intervalo real [0,1]."@es .



###  http://purl.org/ceu/simeon#NormalizedDistanceFunction

:NormalizedDistanceFunction rdf:type owl:Class ;
                            
                            rdfs:label "Normalized distance function"@en ,
                                       "Función de distancia normalizada"@es ;
                            
                            owl:equivalentClass [ rdf:type owl:Class ;
                                                  owl:intersectionOf ( :DistanceFunction
                                                                       :NormalizedComparisonMethod
                                                                     )
                                                ] ;
                            
                            rdfs:comment "A normalized distance function is a distance function with range the real inteval [0,1], that is, that returns values between 0 and 1"@en ,
                                         "Una función de distancia normalizada es una función de distancia con rango el intervalo real [0,1], es decir, que devuelve valores entre 0 y 1"@es .



###  http://purl.org/ceu/simeon#NormalizedDistanceMeasure

:NormalizedDistanceMeasure rdf:type owl:Class ;
                           
                           rdfs:label "Normalized distance measure"@en ,
                                      "Medida de distancia normalizada"@es ;
                           
                           owl:equivalentClass [ rdf:type owl:Class ;
                                                 owl:intersectionOf ( :DistanceMeasure
                                                                      :NormalizedComparisonMeasure
                                                                    )
                                               ] ;
                           
                           rdfs:comment "A normalized distance measure is a distance measure in the real interval [0,1]."@en ,
                                        "Una medida de distancia normalizada es una medida de distancia en el intervalo real [0,1]."@es .



###  http://purl.org/ceu/simeon#NormalizedSimilarityFunction

:NormalizedSimilarityFunction rdf:type owl:Class ;
                              
                              rdfs:label "Normalized similarity function"@en ,
                                         "Función de similitud normalizada"@es ;
                              
                              owl:equivalentClass [ rdf:type owl:Class ;
                                                    owl:intersectionOf ( :NormalizedComparisonMethod
                                                                         :SimilarityFunction
                                                                       )
                                                  ] ;
                              
                              rdfs:comment "A normalized similarity function is a similarity function with range the real interval [0,1], that is, that returns values between 0 and 1."@en ,
                                           "Una función de similitud normalizada es una función de similitud cuyo rango es el intervalo real [0,1], es decir que devuelve valores entre 0 y 1."@es .



###  http://purl.org/ceu/simeon#NormalizedSimilarityMeasure

:NormalizedSimilarityMeasure rdf:type owl:Class ;
                             
                             rdfs:label "Normalized similarity measure"@en ,
                                        "Medida de similitud normalizada"@es ;
                             
                             owl:equivalentClass [ rdf:type owl:Class ;
                                                   owl:intersectionOf ( :NormalizedComparisonMeasure
                                                                        :SimilarityMeasure
                                                                      )
                                                 ] ;
                             
                             rdfs:comment "A normalized similarity measure is a similiarity measure in the real interval [0,1]."@en ,
                                          "Una medida de similitud normalizada es una medida de similitud en el intervalo real [0,1]."@es .



###  http://purl.org/ceu/simeon#ObjectComparisonMeasure

:ObjectComparisonMeasure rdf:type owl:Class ;
                         
                         rdfs:label "Object comparison measure"@en ,
                                    "Medida de comparación de objetos"@es ;
                         
                         rdfs:subClassOf :ComparisonMeasure ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty :hasTargetObject ;
                                           owl:someValuesFrom owl:Thing
                                         ] ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty :hasSourceObject ;
                                           owl:someValuesFrom owl:Thing
                                         ] ;
                         
                         rdfs:comment "A comparison measure is a value that espresses the similarity or dissimilarity degree between two objects that are not literals."@en ,
                                      "Una medida de comparación es un valor que expresa el grado de similitud o disimilitud entre dos objetos que no son literales."@es .



###  http://purl.org/ceu/simeon#ObjectComparisonMethod

:ObjectComparisonMethod rdf:type owl:Class ;
                        
                        rdfs:label "Object comparison method"@en ,
                                   "Método de comparación de objetos"@es ;
                        
                        rdfs:subClassOf :ComparisonMethod ;
                        
                        rdfs:comment "A comparison method is a procedure to compare a source object (non literal) with a target one, that returns a real number, known as comparison measure, that expresses the similarity or dissimilarity degree of the source object with the target one."@en ,
                                     "Un método de comparación es un procedimiento para comparar un objeto origen con otro destino, que devuelve un número real, conocido como medida de comparación, que expresa el grado de similitud o disimilitud del objeto origen con el destino."@es .



###  http://purl.org/ceu/simeon#ObjectiveComparisonMeasure

:ObjectiveComparisonMeasure rdf:type owl:Class ;
                            
                            rdfs:label "Objective comparison measure"@en ,
                                       "Medida de comparación objetiva"@es ;
                            
                            rdfs:subClassOf :ComparisonMeasure ;
                            
                            owl:disjointWith :SubjectiveComparisonMeasure ;
                            
                            rdfs:comment "An objective comparison measure is a comparison measure calculated with an objective comparison method, that is, a method that always returns the same value when applied to the same objects."@en ,
                                         "Una medida de comparación objetiva es una medida de comparación realizada con un método de comparación objetivo, es decir, un método que siempre da el mismo resultado cuando se aplica a los mismos objetos."@es .



###  http://purl.org/ceu/simeon#SimilarityFunction

:SimilarityFunction rdf:type owl:Class ;
                    
                    rdfs:label "Similarity function"@en ,
                               "Función de similitud"@es ;
                    
                    rdfs:subClassOf :ComparisonMethod ;
                    
                    rdfs:comment """A similarity function is a real function that associates to every pair of objects in a domain, a real number that expresses the likeness, similarity or proximity degree between the two objects according to some of their features, and satisfies the following axioms:
1- Non-negativity: s(x, y) ≥ 0 for all x, y. 
2- Maximality: s(x, x) ≥ s(x,y) for all x, y."""@en ,
                                 """Una función de similitud es una función real s que asocia a cada par de objetos de un mismo dominio, un número real que expresa el grado de parecido,  semejanza o proximidad entre los dos objetos de acuerdo a alguna de sus características, y satisface los siguientes axiomas:
1- No negatividad: s(x, y) ≥ 0 para todo x, y. 
2- Maximalidad: s(x, x) ≥ s(x,y) para todo x, y."""@es .



###  http://purl.org/ceu/simeon#SimilarityMeasure

:SimilarityMeasure rdf:type owl:Class ;
                   
                   rdfs:label "Similarity measure"@en ,
                              "Medida de similitud"@es ;
                   
                   rdfs:subClassOf :ObjectiveComparisonMeasure ,
                                   [ rdf:type owl:Restriction ;
                                     owl:onProperty :usesComparisonMethod ;
                                     owl:someValuesFrom :SimilarityFunction
                                   ] ;
                   
                   rdfs:comment """A similarity measure is a number that expresses the similarity degree between two objects, calculated with a similarity function, that is, a real function s that satisfies the following axioms:
1- Non-negativity: s(x, y) ≥ 0 for all x, y. 
2- Maximality: s(x, x) ≥ s(x,y) for all x, y."""@en ,
                                """Una medida de similitud es un número que establece el grado de semejanza o similitud entre dos objetos, calculado con una función de similitud, es decir, una función real s que satisface los siguientes axiomas:
1- No negatividad: s(x, y) ≥ 0 para todo x, y. 
2- Maximalidad: s(x, x) ≥ s(x,y) para todo x, y."""@es .



###  http://purl.org/ceu/simeon#SubjectiveComparisonMeasure

:SubjectiveComparisonMeasure rdf:type owl:Class ;
                             
                             rdfs:label "Subjective comparison measure"@en ,
                                        "Medida de comparación subjetiva"@es ;
                             
                             rdfs:subClassOf :ComparisonMeasure ;
                             
                             rdfs:comment "A subjective comparison measure is a measure obtained with a subjective comparison method, that is, based on the perception, feelings or opinion of a person."@en ,
                                          "Una medida de comparación subjetiva es una medida realizada con un método de comparación subjetivo, es decir, basado en la percepción, sentimientos u opinión de una persona."@es .



###  http://purl.org/ceu/simeon#SymmetricComparisonMeasure

:SymmetricComparisonMeasure rdf:type owl:Class ;
                            
                            rdfs:label "Symmetric comparison measure"@en ,
                                       "Medida de comaración simétrica"@es ;
                            
                            rdfs:subClassOf :ComparisonMeasure ,
                                            [ rdf:type owl:Restriction ;
                                              owl:onProperty :usesComparisonMethod ;
                                              owl:someValuesFrom :SymmetricComparisonMethod
                                            ] ;
                            
                            rdfs:comment """A symmetric comparison measure is a comparison measure calculated with a symmetric comparison function, that is, a real function c that satisfies the symmetry axiom:
c(x,y) = c(y,x) for all x,y."""@en ,
                                         """Una medida de comparación simétrica es una medida de comparación calculada con una función de comparación simétrica, es decir, una función real c que satisface el axioma de simetría:
c(x,y) = c(y,x) para todo x,y."""@es .



###  http://purl.org/ceu/simeon#SymmetricComparisonMethod

:SymmetricComparisonMethod rdf:type owl:Class ;
                           
                           rdfs:label "Symmetric comparison method"@en ,
                                      "Método de comparación simétrico"@es ;
                           
                           rdfs:subClassOf :ComparisonMethod ;
                           
                           rdfs:comment """A symmetric comparison method is a comparison method or function c that satisfies the symmetry axiom:
c(x,y) = c(y,x) for all x,y."""@en ,
                                        """Un método de comparación simétrico es un método de comparación o función c que satisface el axioma de simetría:
c(x,y) = c(y,x) para todo x,y."""@es .



###  http://purl.org/ceu/simeon#SymmetricDissimilarityFunction

:SymmetricDissimilarityFunction rdf:type owl:Class ;
                                
                                rdfs:label "Symmetric dissimilarity function"@en ,
                                           "Función de disimilitud simétrica"@es ;
                                
                                owl:equivalentClass [ rdf:type owl:Class ;
                                                      owl:intersectionOf ( :DissimilarityFunction
                                                                           :SymmetricComparisonMethod
                                                                         )
                                                    ] ;
                                
                                rdfs:comment """A symmetric dissimilarity function is a dissimilarity function d that satisfies the symmetry axiom
d(x,y) = d(y,x) for all x,y."""@en ,
                                             """Una función de disimilitud simétrica es una función de disimilitud d que satisface el axioma de simetría
d(x,y) = d(y,x) para todo x,y."""@es .



###  http://purl.org/ceu/simeon#SymmetricDissimilarityMeasure

:SymmetricDissimilarityMeasure rdf:type owl:Class ;
                               
                               rdfs:label "Symmetric dissimilarity measure"@en ,
                                          "Medida de disimilitud simétrica"@es ;
                               
                               rdfs:subClassOf :DissimilarityMeasure ,
                                               :SymmetricComparisonMeasure ;
                               
                               rdfs:comment """A symmetric dissimilarity measure is a dissimilarity measure calculated with a symmetric dissimilarity function, that is, a real function d that satisfies the symmetry axiom:
d(x,y) = d(y,x) for all x,y."""@en ,
                                            """Una medida de disimilitud simétrica es una medida de disimilitud calculada con una función de disimilitud simétrica, es decir, una función real d que satisface el axioma de simetría:
d(x,y) = d(y,x) para todo x,y."""@es .



###  http://purl.org/ceu/simeon#SymmetricSimilarityFunction

:SymmetricSimilarityFunction rdf:type owl:Class ;
                             
                             rdfs:label "Symmetric similarity function"@en ,
                                        "Función de similitud simétrica"@es ;
                             
                             owl:equivalentClass [ rdf:type owl:Class ;
                                                   owl:intersectionOf ( :SimilarityFunction
                                                                        :SymmetricComparisonMethod
                                                                      )
                                                 ] ;
                             
                             rdfs:comment """A symmetric similarity function is a similarity function that satisfies the symmetry axiom
s(x,y) = s(y,x) for all x,y."""@en ,
                                          """Una función de similitud simétrica es una función de similitud s que satisface el axioma de simetría
s(x,y) = s(y,x) para todo x,y."""@es .



###  http://purl.org/ceu/simeon#SymmetricSimilarityMeasure

:SymmetricSimilarityMeasure rdf:type owl:Class ;
                            
                            rdfs:label "Symmetric similarity measure"@en ,
                                       "Medida de similitud simétrica"@es ;
                            
                            rdfs:subClassOf :SimilarityMeasure ,
                                            :SymmetricComparisonMeasure ;
                            
                            rdfs:comment """A symmetric similarity measure is a similarity measure calculated with a symmetric similarity function, that is, a real function s that satisfies the symmetry axiom:
s(x,y) = s(y,x) for all x,y."""@en ,
                                         """Una medida de similitud simétrica es una medida de similitud calculada con una función de similitud simétrica, es decir, una función real s que satisface el axioma de simetría:
s(x,y) = s(y,x) para todo x,y."""@es .



###  http://purl.org/dc/terms/Agent

<http://purl.org/dc/terms/Agent> rdf:type owl:Class ;
                                 
                                 rdfs:label "Agent"@en ,
                                            "Agente"@es ;
                                 
                                 rdfs:comment "An agent is an entity (person or artefact) capable of acting and doing things."@en ;
                                 
                                 rdfs:seeAlso "The Dublin Core Ontology: http://dublincore.org/documents/dcmi-terms/"@en ,
                                              "La ontología Dublin Core: http://dublincore.org/documents/dcmi-terms/"@es ;
                                 
                                 rdfs:comment "Un agente es una entidad (persona o artefacto) capaz de actuar y hacer cosas."@es .



###  http://purl.org/dc/terms/BibliographicResource

<http://purl.org/dc/terms/BibliographicResource> rdf:type owl:Class ;
                                                 
                                                 rdfs:label "Bibliographic resource"@en ,
                                                            "Recurso bibliográfico"@es ;
                                                 
                                                 rdfs:comment "A bibliographic resource is a publication (article, book, web page, etc.)"@en ;
                                                 
                                                 rdfs:seeAlso "The Dublin Core Ontology: http://dublincore.org/documents/dcmi-terms/"@en ,
                                                              "La ontología Dublin Core: http://dublincore.org/documents/dcmi-terms/"@es ;
                                                 
                                                 rdfs:comment "Un recurso bibliográfico es una publicación (artículo, libro, página web, etc)."@es .





#################################################################
#
#    Individuals
#
#################################################################


###  http://purl.org/ceu/simeon#dataIdentitySimilarityFunction

:dataIdentitySimilarityFunction rdf:type :NormalizedSimilarityFunction ,
                                         :SymmetricSimilarityFunction ,
                                         owl:NamedIndividual .



###  http://purl.org/ceu/simeon#objectIdentitySimilarityFunction

:objectIdentitySimilarityFunction rdf:type :NormalizedSimilarityFunction ,
                                           :SymmetricSimilarityFunction ,
                                           owl:NamedIndividual ;
                                  
                                  rdfs:label "identity similarity function"@en ,
                                             "función de similitud identidad"@es ;
                                  
                                  rdfs:comment """The identity similarity function is a normalized similarity function s such that
s(x,y)=1 if x=y 
s(x,y)=0 if x≠y"""@en ,
                                               """Una función de similitud simétrica es una función de similitud s que satisface el axioma de simetría
s(x,y) = s(y,x) para todo x,y."""@es .





#################################################################
#
#    Annotations
#
#################################################################


owl:topDataProperty rdfs:label "compares entity"@en ,
                               "compara entidad"@es ;
                    
                    rdfs:comment "Property that relates a comparison method with an entity that is compared with other using that method."@en ,
                                 "Propiedad que relaciona un método de comparación con una entidad que ha sido comparada con otra utilizando ese método."@es .





#################################################################
#
#    Rules
#
#################################################################


<urn:swrl#similarity> rdf:type swrl:Variable .
<urn:swrl#individual1> rdf:type swrl:Variable .
<urn:swrl#individual2> rdf:type swrl:Variable .
<urn:swrl#literal2> rdf:type swrl:Variable .
<urn:swrl#literal1> rdf:type swrl:Variable .
<urn:swrl#measure1> rdf:type swrl:Variable .
<urn:swrl#method> rdf:type swrl:Variable .
<urn:swrl#value> rdf:type swrl:Variable .
<urn:swrl#measure2> rdf:type swrl:Variable .
<urn:swrl#measure> rdf:type swrl:Variable .
<urn:swrl#measure3> rdf:type swrl:Variable .
<urn:swrl#individual3> rdf:type swrl:Variable .
<urn:swrl#value3> rdf:type swrl:Variable .
<urn:swrl#value4> rdf:type swrl:Variable .
<urn:swrl#value1> rdf:type swrl:Variable .
<urn:swrl#value2> rdf:type swrl:Variable .
<urn:swrl#literal3> rdf:type swrl:Variable .
[ rdf:type swrl:Imp ;
  swrl:body [ rdf:type swrl:AtomList ;
              rdf:first [ rdf:type swrl:ClassAtom ;
                          swrl:classPredicate :DistanceMeasure ;
                          swrl:argument1 <urn:swrl#measure>
                        ] ;
              rdf:rest [ rdf:type swrl:AtomList ;
                         rdf:rest [ rdf:type swrl:AtomList ;
                                    rdf:rest [ rdf:type swrl:AtomList ;
                                               rdf:rest rdf:nil ;
                                               rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                           swrl:argument2 0 ;
                                                           swrl:propertyPredicate :hasValue ;
                                                           swrl:argument1 <urn:swrl#measure>
                                                         ]
                                             ] ;
                                    rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                swrl:propertyPredicate :hasTargetObject ;
                                                swrl:argument2 <urn:swrl#individual2> ;
                                                swrl:argument1 <urn:swrl#measure>
                                              ]
                                  ] ;
                         rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                     swrl:propertyPredicate :hasSourceObject ;
                                     swrl:argument2 <urn:swrl#individual1> ;
                                     swrl:argument1 <urn:swrl#measure>
                                   ]
                       ]
            ] ;
  swrl:head [ rdf:type swrl:AtomList ;
              rdf:rest rdf:nil ;
              rdf:first [ rdf:type swrl:SameIndividualAtom ;
                          swrl:argument1 <urn:swrl#individual1> ;
                          swrl:argument2 <urn:swrl#individual2>
                        ]
            ]
] .
[ rdf:type swrl:Imp ;
  swrl:body [ rdf:type swrl:AtomList ;
              rdf:rest [ rdf:type swrl:AtomList ;
                         rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                     swrl:propertyPredicate :usesComparisonMethod ;
                                     swrl:argument1 <urn:swrl#measure2> ;
                                     swrl:argument2 <urn:swrl#method>
                                   ] ;
                         rdf:rest [ rdf:type swrl:AtomList ;
                                    rdf:rest [ rdf:type swrl:AtomList ;
                                               rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                           swrl:propertyPredicate :usesComparisonMethod ;
                                                           swrl:argument1 <urn:swrl#measure3> ;
                                                           swrl:argument2 <urn:swrl#method>
                                                         ] ;
                                               rdf:rest [ rdf:type swrl:AtomList ;
                                                          rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                                      swrl:propertyPredicate :hasTargetObject ;
                                                                      swrl:argument2 <urn:swrl#individual3> ;
                                                                      swrl:argument1 <urn:swrl#measure2>
                                                                    ] ;
                                                          rdf:rest [ rdf:type swrl:AtomList ;
                                                                     rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                                                 swrl:propertyPredicate :hasSourceObject ;
                                                                                 swrl:argument2 <urn:swrl#individual1> ;
                                                                                 swrl:argument1 <urn:swrl#measure1>
                                                                               ] ;
                                                                     rdf:rest [ rdf:type swrl:AtomList ;
                                                                                rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                                                            swrl:propertyPredicate :hasTargetObject ;
                                                                                            swrl:argument2 <urn:swrl#individual2> ;
                                                                                            swrl:argument1 <urn:swrl#measure1>
                                                                                          ] ;
                                                                                rdf:rest [ rdf:type swrl:AtomList ;
                                                                                           rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                      rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                 rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                            rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                                       rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                                                                                                                   swrl:propertyPredicate :usesComparisonMethod ;
                                                                                                                                                   swrl:argument1 <urn:swrl#measure1> ;
                                                                                                                                                   swrl:argument2 <urn:swrl#method>
                                                                                                                                                 ] ;
                                                                                                                                       rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                                                  rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                                                                                                                              swrl:propertyPredicate :hasSourceObject ;
                                                                                                                                                              swrl:argument2 <urn:swrl#individual1> ;
                                                                                                                                                              swrl:argument1 <urn:swrl#measure3>
                                                                                                                                                            ] ;
                                                                                                                                                  rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                                                             rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                                                                        rdf:first [ rdf:type swrl:ClassAtom ;
                                                                                                                                                                                    swrl:classPredicate :DistanceMeasure ;
                                                                                                                                                                                    swrl:argument1 <urn:swrl#measure2>
                                                                                                                                                                                  ] ;
                                                                                                                                                                        rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                                                                                   rdf:rest rdf:nil ;
                                                                                                                                                                                   rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                                                                                                                                               swrl:propertyPredicate :hasValue ;
                                                                                                                                                                                               swrl:argument1 <urn:swrl#measure1> ;
                                                                                                                                                                                               swrl:argument2 <urn:swrl#value1>
                                                                                                                                                                                             ]
                                                                                                                                                                                 ]
                                                                                                                                                                      ] ;
                                                                                                                                                             rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                                                                                                                         swrl:propertyPredicate :hasValue ;
                                                                                                                                                                         swrl:argument1 <urn:swrl#measure2> ;
                                                                                                                                                                         swrl:argument2 <urn:swrl#value2>
                                                                                                                                                                       ]
                                                                                                                                                           ]
                                                                                                                                                ]
                                                                                                                                     ] ;
                                                                                                                            rdf:first [ rdf:type swrl:ClassAtom ;
                                                                                                                                        swrl:classPredicate :DistanceMeasure ;
                                                                                                                                        swrl:argument1 <urn:swrl#measure3>
                                                                                                                                      ]
                                                                                                                          ] ;
                                                                                                                 rdf:first [ rdf:type swrl:BuiltinAtom ;
                                                                                                                             swrl:builtin swrlb:add ;
                                                                                                                             swrl:arguments ( <urn:swrl#value4>
                                                                                                                                              <urn:swrl#value1>
                                                                                                                                              <urn:swrl#value2>
                                                                                                                                            )
                                                                                                                           ]
                                                                                                               ] ;
                                                                                                      rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                                                                  swrl:propertyPredicate :hasValue ;
                                                                                                                  swrl:argument1 <urn:swrl#measure3> ;
                                                                                                                  swrl:argument2 <urn:swrl#value3>
                                                                                                                ]
                                                                                                    ] ;
                                                                                           rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                                                                       swrl:propertyPredicate :hasSourceObject ;
                                                                                                       swrl:argument2 <urn:swrl#individual2> ;
                                                                                                       swrl:argument1 <urn:swrl#measure2>
                                                                                                     ]
                                                                                         ]
                                                                              ]
                                                                   ]
                                                        ]
                                             ] ;
                                    rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                swrl:propertyPredicate :hasTargetObject ;
                                                swrl:argument2 <urn:swrl#individual3> ;
                                                swrl:argument1 <urn:swrl#measure3>
                                              ]
                                  ]
                       ] ;
              rdf:first [ rdf:type swrl:ClassAtom ;
                          swrl:classPredicate :DistanceMeasure ;
                          swrl:argument1 <urn:swrl#measure1>
                        ]
            ] ;
  swrl:head [ rdf:type swrl:AtomList ;
              rdf:rest rdf:nil ;
              rdf:first [ rdf:type swrl:BuiltinAtom ;
                          swrl:builtin swrlb:greaterThanOrEqual ;
                          swrl:arguments ( <urn:swrl#value4>
                                           <urn:swrl#value3>
                                         )
                        ]
            ]
] .
[ rdf:type swrl:Imp ;
  swrl:head [ rdf:type swrl:AtomList ;
              rdf:rest rdf:nil ;
              rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                          swrl:argument2 0 ;
                          swrl:propertyPredicate :hasValue ;
                          swrl:argument1 <urn:swrl#measure>
                        ]
            ] ;
  swrl:body [ rdf:type swrl:AtomList ;
              rdf:rest [ rdf:type swrl:AtomList ;
                         rdf:rest [ rdf:type swrl:AtomList ;
                                    rdf:rest [ rdf:type swrl:AtomList ;
                                               rdf:rest [ rdf:type swrl:AtomList ;
                                                          rdf:rest rdf:nil ;
                                                          rdf:first [ rdf:type swrl:DifferentIndividualsAtom ;
                                                                      swrl:argument1 <urn:swrl#individual1> ;
                                                                      swrl:argument2 <urn:swrl#individual2>
                                                                    ]
                                                        ] ;
                                               rdf:first [ rdf:type swrl:ClassAtom ;
                                                           swrl:classPredicate :SimilarityMeasure ;
                                                           swrl:argument1 <urn:swrl#measure>
                                                         ]
                                             ] ;
                                    rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                swrl:propertyPredicate :hasTargetObject ;
                                                swrl:argument2 <urn:swrl#individual2> ;
                                                swrl:argument1 <urn:swrl#measure>
                                              ]
                                  ] ;
                         rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                     swrl:propertyPredicate :hasSourceObject ;
                                     swrl:argument2 <urn:swrl#individual1> ;
                                     swrl:argument1 <urn:swrl#measure>
                                   ]
                       ] ;
              rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                          swrl:argument2 :objectIdentitySimilarityFunction ;
                          swrl:propertyPredicate :usesComparisonMethod ;
                          swrl:argument1 <urn:swrl#measure>
                        ]
            ]
] .
[ rdf:type swrl:Imp ;
  swrl:head [ rdf:type swrl:AtomList ;
              rdf:rest rdf:nil ;
              rdf:first [ rdf:type swrl:SameIndividualAtom ;
                          swrl:argument1 <urn:swrl#literal1> ;
                          swrl:argument2 <urn:swrl#literal2>
                        ]
            ] ;
  swrl:body [ rdf:type swrl:AtomList ;
              rdf:first [ rdf:type swrl:ClassAtom ;
                          swrl:classPredicate :DistanceMeasure ;
                          swrl:argument1 <urn:swrl#measure>
                        ] ;
              rdf:rest [ rdf:type swrl:AtomList ;
                         rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                     swrl:propertyPredicate :hasTargetData ;
                                     swrl:argument2 <urn:swrl#literal2> ;
                                     swrl:argument1 <urn:swrl#measure>
                                   ] ;
                         rdf:rest [ rdf:type swrl:AtomList ;
                                    rdf:rest [ rdf:type swrl:AtomList ;
                                               rdf:rest rdf:nil ;
                                               rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                           swrl:propertyPredicate :hasSourceData ;
                                                           swrl:argument2 <urn:swrl#literal1> ;
                                                           swrl:argument1 <urn:swrl#measure>
                                                         ]
                                             ] ;
                                    rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                swrl:argument2 0 ;
                                                swrl:propertyPredicate :hasValue ;
                                                swrl:argument1 <urn:swrl#measure>
                                              ]
                                  ]
                       ]
            ]
] .
[ rdf:type swrl:Imp ;
  swrl:head [ rdf:type swrl:AtomList ;
              rdf:rest rdf:nil ;
              rdf:first [ rdf:type swrl:BuiltinAtom ;
                          swrl:builtin swrlb:greaterThanOrEqual ;
                          swrl:arguments ( <urn:swrl#value4>
                                           <urn:swrl#value3>
                                         )
                        ]
            ] ;
  swrl:body [ rdf:type swrl:AtomList ;
              rdf:rest [ rdf:type swrl:AtomList ;
                         rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                     swrl:propertyPredicate :usesComparisonMethod ;
                                     swrl:argument1 <urn:swrl#measure2> ;
                                     swrl:argument2 <urn:swrl#method>
                                   ] ;
                         rdf:rest [ rdf:type swrl:AtomList ;
                                    rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                swrl:propertyPredicate :hasSourceData ;
                                                swrl:argument2 <urn:swrl#literal1> ;
                                                swrl:argument1 <urn:swrl#measure3>
                                              ] ;
                                    rdf:rest [ rdf:type swrl:AtomList ;
                                               rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                           swrl:propertyPredicate :hasTargetData ;
                                                           swrl:argument2 <urn:swrl#literal3> ;
                                                           swrl:argument1 <urn:swrl#measure3>
                                                         ] ;
                                               rdf:rest [ rdf:type swrl:AtomList ;
                                                          rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                                      swrl:propertyPredicate :usesComparisonMethod ;
                                                                      swrl:argument1 <urn:swrl#measure3> ;
                                                                      swrl:argument2 <urn:swrl#method>
                                                                    ] ;
                                                          rdf:rest [ rdf:type swrl:AtomList ;
                                                                     rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                                 swrl:propertyPredicate :hasSourceData ;
                                                                                 swrl:argument2 <urn:swrl#literal2> ;
                                                                                 swrl:argument1 <urn:swrl#measure2>
                                                                               ] ;
                                                                     rdf:rest [ rdf:type swrl:AtomList ;
                                                                                rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                                            swrl:propertyPredicate :hasValue ;
                                                                                            swrl:argument1 <urn:swrl#measure3> ;
                                                                                            swrl:argument2 <urn:swrl#value3>
                                                                                          ] ;
                                                                                rdf:rest [ rdf:type swrl:AtomList ;
                                                                                           rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                      rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                                                                  swrl:propertyPredicate :hasSourceData ;
                                                                                                                  swrl:argument2 <urn:swrl#literal1> ;
                                                                                                                  swrl:argument1 <urn:swrl#measure1>
                                                                                                                ] ;
                                                                                                      rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                 rdf:first [ rdf:type swrl:ClassAtom ;
                                                                                                                             swrl:classPredicate :DistanceMeasure ;
                                                                                                                             swrl:argument1 <urn:swrl#measure3>
                                                                                                                           ] ;
                                                                                                                 rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                            rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                                                                                                        swrl:propertyPredicate :usesComparisonMethod ;
                                                                                                                                        swrl:argument1 <urn:swrl#measure1> ;
                                                                                                                                        swrl:argument2 <urn:swrl#method>
                                                                                                                                      ] ;
                                                                                                                            rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                                       rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                                                  rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                                                             rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                                                                        rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                                                                                                                                    swrl:propertyPredicate :hasValue ;
                                                                                                                                                                                    swrl:argument1 <urn:swrl#measure1> ;
                                                                                                                                                                                    swrl:argument2 <urn:swrl#value1>
                                                                                                                                                                                  ] ;
                                                                                                                                                                        rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                                                                                   rdf:rest rdf:nil ;
                                                                                                                                                                                   rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                                                                                                                                               swrl:propertyPredicate :hasTargetData ;
                                                                                                                                                                                               swrl:argument2 <urn:swrl#literal3> ;
                                                                                                                                                                                               swrl:argument1 <urn:swrl#measure2>
                                                                                                                                                                                             ]
                                                                                                                                                                                 ]
                                                                                                                                                                      ] ;
                                                                                                                                                             rdf:first [ rdf:type swrl:ClassAtom ;
                                                                                                                                                                         swrl:classPredicate :DistanceMeasure ;
                                                                                                                                                                         swrl:argument1 <urn:swrl#measure2>
                                                                                                                                                                       ]
                                                                                                                                                           ] ;
                                                                                                                                                  rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                                                                                                              swrl:propertyPredicate :hasValue ;
                                                                                                                                                              swrl:argument1 <urn:swrl#measure2> ;
                                                                                                                                                              swrl:argument2 <urn:swrl#value2>
                                                                                                                                                            ]
                                                                                                                                                ] ;
                                                                                                                                       rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                                                                                                   swrl:propertyPredicate :hasTargetData ;
                                                                                                                                                   swrl:argument2 <urn:swrl#literal2> ;
                                                                                                                                                   swrl:argument1 <urn:swrl#measure1>
                                                                                                                                                 ]
                                                                                                                                     ]
                                                                                                                          ]
                                                                                                               ]
                                                                                                    ] ;
                                                                                           rdf:first [ rdf:type swrl:BuiltinAtom ;
                                                                                                       swrl:builtin swrlb:add ;
                                                                                                       swrl:arguments ( <urn:swrl#value4>
                                                                                                                        <urn:swrl#value1>
                                                                                                                        <urn:swrl#value2>
                                                                                                                      )
                                                                                                     ]
                                                                                         ]
                                                                              ]
                                                                   ]
                                                        ]
                                             ]
                                  ]
                       ] ;
              rdf:first [ rdf:type swrl:ClassAtom ;
                          swrl:classPredicate :DistanceMeasure ;
                          swrl:argument1 <urn:swrl#measure1>
                        ]
            ]
] .
[ rdf:type swrl:Imp ;
  swrl:head [ rdf:type swrl:AtomList ;
              rdf:rest [ rdf:type swrl:AtomList ;
                         rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                     swrl:propertyPredicate :hasSourceData ;
                                     swrl:argument2 <urn:swrl#literal2> ;
                                     swrl:argument1 <urn:swrl#measure2>
                                   ] ;
                         rdf:rest [ rdf:type swrl:AtomList ;
                                    rdf:rest [ rdf:type swrl:AtomList ;
                                               rdf:rest [ rdf:type swrl:AtomList ;
                                                          rdf:rest rdf:nil ;
                                                          rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                      swrl:propertyPredicate :hasValue ;
                                                                      swrl:argument1 <urn:swrl#measure2> ;
                                                                      swrl:argument2 <urn:swrl#value>
                                                                    ]
                                                        ] ;
                                               rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                           swrl:propertyPredicate :usesComparisonMethod ;
                                                           swrl:argument1 <urn:swrl#measure2> ;
                                                           swrl:argument2 <urn:swrl#method>
                                                         ]
                                             ] ;
                                    rdf:first [ rdf:type swrl:ClassAtom ;
                                                swrl:classPredicate :SymmetricComparisonMeasure ;
                                                swrl:argument1 <urn:swrl#measure2>
                                              ]
                                  ]
                       ] ;
              rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                          swrl:propertyPredicate :hasTargetData ;
                          swrl:argument2 <urn:swrl#literal1> ;
                          swrl:argument1 <urn:swrl#measure2>
                        ]
            ] ;
  swrl:body [ rdf:type swrl:AtomList ;
              rdf:first [ rdf:type swrl:ClassAtom ;
                          swrl:classPredicate :SymmetricComparisonMeasure ;
                          swrl:argument1 <urn:swrl#measure1>
                        ] ;
              rdf:rest [ rdf:type swrl:AtomList ;
                         rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                     swrl:propertyPredicate :hasSourceData ;
                                     swrl:argument2 <urn:swrl#literal1> ;
                                     swrl:argument1 <urn:swrl#measure1>
                                   ] ;
                         rdf:rest [ rdf:type swrl:AtomList ;
                                    rdf:rest [ rdf:type swrl:AtomList ;
                                               rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                           swrl:propertyPredicate :hasValue ;
                                                           swrl:argument1 <urn:swrl#measure1> ;
                                                           swrl:argument2 <urn:swrl#value>
                                                         ] ;
                                               rdf:rest [ rdf:type swrl:AtomList ;
                                                          rdf:rest rdf:nil ;
                                                          rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                      swrl:propertyPredicate :hasTargetData ;
                                                                      swrl:argument2 <urn:swrl#literal2> ;
                                                                      swrl:argument1 <urn:swrl#measure1>
                                                                    ]
                                                        ]
                                             ] ;
                                    rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                swrl:propertyPredicate :usesComparisonMethod ;
                                                swrl:argument1 <urn:swrl#measure1> ;
                                                swrl:argument2 <urn:swrl#method>
                                              ]
                                  ]
                       ]
            ]
] .
[ rdf:type swrl:Imp ;
  swrl:body [ rdf:type swrl:AtomList ;
              rdf:rest [ rdf:type swrl:AtomList ;
                         rdf:first [ rdf:type swrl:SameIndividualAtom ;
                                     swrl:argument1 <urn:swrl#literal1> ;
                                     swrl:argument2 <urn:swrl#literal2>
                                   ] ;
                         rdf:rest [ rdf:type swrl:AtomList ;
                                    rdf:first [ rdf:type swrl:ClassAtom ;
                                                swrl:classPredicate :DissimilarityMeasure ;
                                                swrl:argument1 <urn:swrl#measure>
                                              ] ;
                                    rdf:rest [ rdf:type swrl:AtomList ;
                                               rdf:rest rdf:nil ;
                                               rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                           swrl:propertyPredicate :hasSourceData ;
                                                           swrl:argument2 <urn:swrl#literal1> ;
                                                           swrl:argument1 <urn:swrl#measure>
                                                         ]
                                             ]
                                  ]
                       ] ;
              rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                          swrl:propertyPredicate :hasTargetObject ;
                          swrl:argument2 <urn:swrl#literal2> ;
                          swrl:argument1 <urn:swrl#measure>
                        ]
            ] ;
  swrl:head [ rdf:type swrl:AtomList ;
              rdf:rest rdf:nil ;
              rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                          swrl:argument2 0 ;
                          swrl:propertyPredicate :hasValue ;
                          swrl:argument1 <urn:swrl#measure>
                        ]
            ]
] .
[ rdf:type swrl:Imp ;
  swrl:head [ rdf:type swrl:AtomList ;
              rdf:rest rdf:nil ;
              rdf:first [ rdf:type swrl:BuiltinAtom ;
                          swrl:builtin swrlb:greaterThanOrEqual ;
                          swrl:arguments ( <urn:swrl#value1>
                                           <urn:swrl#value2>
                                         )
                        ]
            ] ;
  swrl:body [ rdf:type swrl:AtomList ;
              rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                          swrl:propertyPredicate :hasSourceObject ;
                          swrl:argument2 <urn:swrl#individual1> ;
                          swrl:argument1 <urn:swrl#measure2>
                        ] ;
              rdf:rest [ rdf:type swrl:AtomList ;
                         rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                     swrl:propertyPredicate :usesComparisonMethod ;
                                     swrl:argument1 <urn:swrl#measure2> ;
                                     swrl:argument2 <urn:swrl#method>
                                   ] ;
                         rdf:rest [ rdf:type swrl:AtomList ;
                                    rdf:rest [ rdf:type swrl:AtomList ;
                                               rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                           swrl:propertyPredicate :hasTargetObject ;
                                                           swrl:argument2 <urn:swrl#individual1> ;
                                                           swrl:argument1 <urn:swrl#measure1>
                                                         ] ;
                                               rdf:rest [ rdf:type swrl:AtomList ;
                                                          rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                                      swrl:propertyPredicate :usesComparisonMethod ;
                                                                      swrl:argument1 <urn:swrl#measure1> ;
                                                                      swrl:argument2 <urn:swrl#method>
                                                                    ] ;
                                                          rdf:rest [ rdf:type swrl:AtomList ;
                                                                     rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                                 swrl:propertyPredicate :hasValue ;
                                                                                 swrl:argument1 <urn:swrl#measure2> ;
                                                                                 swrl:argument2 <urn:swrl#value2>
                                                                               ] ;
                                                                     rdf:rest [ rdf:type swrl:AtomList ;
                                                                                rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                                                            swrl:propertyPredicate :hasTargetObject ;
                                                                                            swrl:argument2 <urn:swrl#individual3> ;
                                                                                            swrl:argument1 <urn:swrl#measure2>
                                                                                          ] ;
                                                                                rdf:rest [ rdf:type swrl:AtomList ;
                                                                                           rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                                                                       swrl:propertyPredicate :hasSourceObject ;
                                                                                                       swrl:argument2 <urn:swrl#individual1> ;
                                                                                                       swrl:argument1 <urn:swrl#measure1>
                                                                                                     ] ;
                                                                                           rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                      rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                 rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                            rdf:rest rdf:nil ;
                                                                                                                            rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                                                                                        swrl:propertyPredicate :hasValue ;
                                                                                                                                        swrl:argument1 <urn:swrl#measure1> ;
                                                                                                                                        swrl:argument2 <urn:swrl#value1>
                                                                                                                                      ]
                                                                                                                          ] ;
                                                                                                                 rdf:first [ rdf:type swrl:SameIndividualAtom ;
                                                                                                                             swrl:argument1 <urn:swrl#individual1> ;
                                                                                                                             swrl:argument2 <urn:swrl#individual2>
                                                                                                                           ]
                                                                                                               ] ;
                                                                                                      rdf:first [ rdf:type swrl:ClassAtom ;
                                                                                                                  swrl:classPredicate :SimilarityMeasure ;
                                                                                                                  swrl:argument1 <urn:swrl#measure2>
                                                                                                                ]
                                                                                                    ]
                                                                                         ]
                                                                              ]
                                                                   ]
                                                        ]
                                             ] ;
                                    rdf:first [ rdf:type swrl:ClassAtom ;
                                                swrl:classPredicate :SimilarityMeasure ;
                                                swrl:argument1 <urn:swrl#measure1>
                                              ]
                                  ]
                       ]
            ]
] .
[ rdf:type swrl:Imp ;
  swrl:head [ rdf:type swrl:AtomList ;
              rdf:rest rdf:nil ;
              rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                          swrl:argument2 0 ;
                          swrl:propertyPredicate :hasValue ;
                          swrl:argument1 <urn:swrl#measure>
                        ]
            ] ;
  swrl:body [ rdf:type swrl:AtomList ;
              rdf:rest [ rdf:type swrl:AtomList ;
                         rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                     swrl:propertyPredicate :hasTargetObject ;
                                     swrl:argument2 <urn:swrl#individual2> ;
                                     swrl:argument1 <urn:swrl#measure>
                                   ] ;
                         rdf:rest [ rdf:type swrl:AtomList ;
                                    rdf:first [ rdf:type swrl:ClassAtom ;
                                                swrl:classPredicate :DissimilarityMeasure ;
                                                swrl:argument1 <urn:swrl#measure>
                                              ] ;
                                    rdf:rest [ rdf:type swrl:AtomList ;
                                               rdf:rest rdf:nil ;
                                               rdf:first [ rdf:type swrl:SameIndividualAtom ;
                                                           swrl:argument1 <urn:swrl#individual1> ;
                                                           swrl:argument2 <urn:swrl#individual2>
                                                         ]
                                             ]
                                  ]
                       ] ;
              rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                          swrl:propertyPredicate :hasSourceObject ;
                          swrl:argument2 <urn:swrl#individual1> ;
                          swrl:argument1 <urn:swrl#measure>
                        ]
            ]
] .
[ rdf:type swrl:Imp ;
  swrl:body [ rdf:type swrl:AtomList ;
              rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                          swrl:propertyPredicate :hasSourceObject ;
                          swrl:argument2 <urn:swrl#individual1> ;
                          swrl:argument1 <urn:swrl#similarity>
                        ] ;
              rdf:rest [ rdf:type swrl:AtomList ;
                         rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                     swrl:propertyPredicate :hasTargetObject ;
                                     swrl:argument2 <urn:swrl#individual2> ;
                                     swrl:argument1 <urn:swrl#similarity>
                                   ] ;
                         rdf:rest [ rdf:type swrl:AtomList ;
                                    rdf:first [ rdf:type swrl:ClassAtom ;
                                                swrl:classPredicate :NormalizedSimilarityMeasure ;
                                                swrl:argument1 <urn:swrl#similarity>
                                              ] ;
                                    rdf:rest [ rdf:type swrl:AtomList ;
                                               rdf:rest rdf:nil ;
                                               rdf:first [ rdf:type swrl:SameIndividualAtom ;
                                                           swrl:argument1 <urn:swrl#individual1> ;
                                                           swrl:argument2 <urn:swrl#individual2>
                                                         ]
                                             ]
                                  ]
                       ]
            ] ;
  swrl:head [ rdf:type swrl:AtomList ;
              rdf:rest rdf:nil ;
              rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                          swrl:argument2 1 ;
                          swrl:propertyPredicate :hasValue ;
                          swrl:argument1 <urn:swrl#similarity>
                        ]
            ]
] .
[ rdf:type swrl:Imp ;
  swrl:head [ rdf:type swrl:AtomList ;
              rdf:rest rdf:nil ;
              rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                          swrl:argument2 1 ;
                          swrl:propertyPredicate :hasValue ;
                          swrl:argument1 <urn:swrl#similarity>
                        ]
            ] ;
  swrl:body [ rdf:type swrl:AtomList ;
              rdf:rest [ rdf:type swrl:AtomList ;
                         rdf:first [ rdf:type swrl:ClassAtom ;
                                     swrl:classPredicate :NormalizedSimilarityMeasure ;
                                     swrl:argument1 <urn:swrl#similarity>
                                   ] ;
                         rdf:rest [ rdf:type swrl:AtomList ;
                                    rdf:rest [ rdf:type swrl:AtomList ;
                                               rdf:rest rdf:nil ;
                                               rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                           swrl:propertyPredicate :hasSourceData ;
                                                           swrl:argument2 <urn:swrl#literal1> ;
                                                           swrl:argument1 <urn:swrl#similarity>
                                                         ]
                                             ] ;
                                    rdf:first [ rdf:type swrl:SameIndividualAtom ;
                                                swrl:argument1 <urn:swrl#literal1> ;
                                                swrl:argument2 <urn:swrl#literal2>
                                              ]
                                  ]
                       ] ;
              rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                          swrl:propertyPredicate :hasTargetData ;
                          swrl:argument2 <urn:swrl#literal2> ;
                          swrl:argument1 <urn:swrl#similarity>
                        ]
            ]
] .
[ rdf:type swrl:Imp ;
  swrl:head [ rdf:type swrl:AtomList ;
              rdf:first [ rdf:type swrl:ClassAtom ;
                          swrl:classPredicate :SymmetricComparisonMeasure ;
                          swrl:argument1 <urn:swrl#measure2>
                        ] ;
              rdf:rest [ rdf:type swrl:AtomList ;
                         rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                     swrl:propertyPredicate :hasTargetObject ;
                                     swrl:argument2 <urn:swrl#individual1> ;
                                     swrl:argument1 <urn:swrl#measure2>
                                   ] ;
                         rdf:rest [ rdf:type swrl:AtomList ;
                                    rdf:rest [ rdf:type swrl:AtomList ;
                                               rdf:rest [ rdf:type swrl:AtomList ;
                                                          rdf:rest rdf:nil ;
                                                          rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                                      swrl:propertyPredicate :hasSourceObject ;
                                                                      swrl:argument2 <urn:swrl#individual2> ;
                                                                      swrl:argument1 <urn:swrl#measure2>
                                                                    ]
                                                        ] ;
                                               rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                           swrl:propertyPredicate :hasValue ;
                                                           swrl:argument1 <urn:swrl#measure2> ;
                                                           swrl:argument2 <urn:swrl#value>
                                                         ]
                                             ] ;
                                    rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                swrl:propertyPredicate :usesComparisonMethod ;
                                                swrl:argument1 <urn:swrl#measure2> ;
                                                swrl:argument2 <urn:swrl#method>
                                              ]
                                  ]
                       ]
            ] ;
  swrl:body [ rdf:type swrl:AtomList ;
              rdf:rest [ rdf:type swrl:AtomList ;
                         rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                     swrl:propertyPredicate :usesComparisonMethod ;
                                     swrl:argument1 <urn:swrl#measure1> ;
                                     swrl:argument2 <urn:swrl#method>
                                   ] ;
                         rdf:rest [ rdf:type swrl:AtomList ;
                                    rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                swrl:propertyPredicate :hasValue ;
                                                swrl:argument1 <urn:swrl#measure1> ;
                                                swrl:argument2 <urn:swrl#value>
                                              ] ;
                                    rdf:rest [ rdf:type swrl:AtomList ;
                                               rdf:rest [ rdf:type swrl:AtomList ;
                                                          rdf:rest rdf:nil ;
                                                          rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                                      swrl:propertyPredicate :hasTargetObject ;
                                                                      swrl:argument2 <urn:swrl#individual2> ;
                                                                      swrl:argument1 <urn:swrl#measure1>
                                                                    ]
                                                        ] ;
                                               rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                           swrl:propertyPredicate :hasSourceObject ;
                                                           swrl:argument2 <urn:swrl#individual1> ;
                                                           swrl:argument1 <urn:swrl#measure1>
                                                         ]
                                             ]
                                  ]
                       ] ;
              rdf:first [ rdf:type swrl:ClassAtom ;
                          swrl:classPredicate :SymmetricComparisonMeasure ;
                          swrl:argument1 <urn:swrl#measure1>
                        ]
            ]
] .
[ rdf:type swrl:Imp ;
  swrl:head [ rdf:type swrl:AtomList ;
              rdf:rest rdf:nil ;
              rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                          swrl:argument2 0 ;
                          swrl:propertyPredicate :hasValue ;
                          swrl:argument1 <urn:swrl#measure>
                        ]
            ] ;
  swrl:body [ rdf:type swrl:AtomList ;
              rdf:rest [ rdf:type swrl:AtomList ;
                         rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                     swrl:propertyPredicate :hasSourceData ;
                                     swrl:argument2 <urn:swrl#literal1> ;
                                     swrl:argument1 <urn:swrl#measure>
                                   ] ;
                         rdf:rest [ rdf:type swrl:AtomList ;
                                    rdf:rest [ rdf:type swrl:AtomList ;
                                               rdf:rest [ rdf:type swrl:AtomList ;
                                                          rdf:rest rdf:nil ;
                                                          rdf:first [ rdf:type swrl:DifferentIndividualsAtom ;
                                                                      swrl:argument1 <urn:swrl#literal1> ;
                                                                      swrl:argument2 <urn:swrl#literal2>
                                                                    ]
                                                        ] ;
                                               rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                           swrl:argument2 :dataIdentitySimilarityFunction ;
                                                           swrl:propertyPredicate :usesComparisonMethod ;
                                                           swrl:argument1 <urn:swrl#measure>
                                                         ]
                                             ] ;
                                    rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                swrl:propertyPredicate :hasTargetData ;
                                                swrl:argument2 <urn:swrl#literal2> ;
                                                swrl:argument1 <urn:swrl#measure>
                                              ]
                                  ]
                       ] ;
              rdf:first [ rdf:type swrl:ClassAtom ;
                          swrl:classPredicate :SimilarityMeasure ;
                          swrl:argument1 <urn:swrl#measure>
                        ]
            ]
] .
[ rdf:type swrl:Imp ;
  swrl:head [ rdf:type swrl:AtomList ;
              rdf:rest rdf:nil ;
              rdf:first [ rdf:type swrl:BuiltinAtom ;
                          swrl:builtin swrlb:greaterThanOrEqual ;
                          swrl:arguments ( <urn:swrl#value1>
                                           <urn:swrl#value2>
                                         )
                        ]
            ] ;
  swrl:body [ rdf:type swrl:AtomList ;
              rdf:rest [ rdf:type swrl:AtomList ;
                         rdf:rest [ rdf:type swrl:AtomList ;
                                    rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                swrl:propertyPredicate :hasSourceData ;
                                                swrl:argument2 <urn:swrl#literal1> ;
                                                swrl:argument1 <urn:swrl#measure1>
                                              ] ;
                                    rdf:rest [ rdf:type swrl:AtomList ;
                                               rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                           swrl:propertyPredicate :hasTargetData ;
                                                           swrl:argument2 <urn:swrl#literal1> ;
                                                           swrl:argument1 <urn:swrl#measure1>
                                                         ] ;
                                               rdf:rest [ rdf:type swrl:AtomList ;
                                                          rdf:first [ rdf:type swrl:SameIndividualAtom ;
                                                                      swrl:argument1 <urn:swrl#literal1> ;
                                                                      swrl:argument2 <urn:swrl#literal2>
                                                                    ] ;
                                                          rdf:rest [ rdf:type swrl:AtomList ;
                                                                     rdf:rest [ rdf:type swrl:AtomList ;
                                                                                rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                                            swrl:propertyPredicate :hasValue ;
                                                                                            swrl:argument1 <urn:swrl#measure2> ;
                                                                                            swrl:argument2 <urn:swrl#value2>
                                                                                          ] ;
                                                                                rdf:rest [ rdf:type swrl:AtomList ;
                                                                                           rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                      rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                                                                  swrl:propertyPredicate :hasValue ;
                                                                                                                  swrl:argument1 <urn:swrl#measure1> ;
                                                                                                                  swrl:argument2 <urn:swrl#value1>
                                                                                                                ] ;
                                                                                                      rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                 rdf:rest [ rdf:type swrl:AtomList ;
                                                                                                                            rdf:rest rdf:nil ;
                                                                                                                            rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                                                                                        swrl:propertyPredicate :hasTargetData ;
                                                                                                                                        swrl:argument2 <urn:swrl#literal3> ;
                                                                                                                                        swrl:argument1 <urn:swrl#measure2>
                                                                                                                                      ]
                                                                                                                          ] ;
                                                                                                                 rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                                                                                                             swrl:propertyPredicate :hasSourceData ;
                                                                                                                             swrl:argument2 <urn:swrl#literal1> ;
                                                                                                                             swrl:argument1 <urn:swrl#measure2>
                                                                                                                           ]
                                                                                                               ]
                                                                                                    ] ;
                                                                                           rdf:first [ rdf:type swrl:ClassAtom ;
                                                                                                       swrl:classPredicate :SimilarityMeasure ;
                                                                                                       swrl:argument1 <urn:swrl#measure2>
                                                                                                     ]
                                                                                         ]
                                                                              ] ;
                                                                     rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                                                                 swrl:propertyPredicate :usesComparisonMethod ;
                                                                                 swrl:argument1 <urn:swrl#measure1> ;
                                                                                 swrl:argument2 <urn:swrl#method>
                                                                               ]
                                                                   ]
                                                        ]
                                             ]
                                  ] ;
                         rdf:first [ rdf:type swrl:ClassAtom ;
                                     swrl:classPredicate :SimilarityMeasure ;
                                     swrl:argument1 <urn:swrl#measure1>
                                   ]
                       ] ;
              rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                          swrl:propertyPredicate :usesComparisonMethod ;
                          swrl:argument1 <urn:swrl#measure2> ;
                          swrl:argument2 <urn:swrl#method>
                        ]
            ]
] .

###  Generated by the OWL API (version 3.5.1) http://owlapi.sourceforge.net

